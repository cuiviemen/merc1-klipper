[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90

    G28

    Z_TILT_ADJUST

    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
   
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro G28]
rename_existing: G28.1
gcode:
  STATUS_HOMING
  {% if 'X' not in params and 'Y' not in params and 'Z' not in params %}
    G28.1
  {% elif 'X' in params  %}
    {% if 'Y' in params %}
      {% if 'Z' in params %}
        G28.1 XYZ
      {% else %}
        G28.1 XY
      {% endif %}
    {% else %}
      G28.1 X
    {% endif %}
  {% elif 'Y' in params %}
    {% if 'Z' in params %}
      G28.1 YZ
    {% else %}
      G28.1 Y
    {% endif %}
  {% elif 'Z' in params %}
    G28.1 Z
  {% endif %}
  STATUS_READY

[gcode_macro CG28]
description: Conditional G28
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    STATUS_HOMING
    {% if printer.toolhead.homed_axes != "x" %}
      G28 X
    {% endif %}
    {% if printer.toolhead.homed_axes != "y" %}
      G28 Y
    {% endif %}
    {% if printer.toolhead.homed_axes != "z" %}
      G28 Z
    {% endif %}
    STATUS_READY
  {% endif %}

[gcode_macro LEVEL_BED]
gcode:
  SAVE_GCODE_STATE NAME=STATE_LEVEL_BED
  G90
  CG28
  Z_TILT_ADJUST
  G28 Z
  RESTORE_GCODE_STATE NAME=STATE_LEVEL_BED

[gcode_macro Z_TILT_ADJUST]
rename_existing: _Z_TILT_ADJUST
gcode:
  STATUS_LEVELING
  {% if 'HORIZONTAL_MOVE_Z' in params %}
    _Z_TILT_ADJUST HORIZONTAL_MOVE_Z={params.HORIZONTAL_MOVE_Z}
  {% else %}
    _Z_TILT_ADJUST
  {% endif %}
  STATUS_READY

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
  STATUS_MESHING
  {% if 'METHOD' in params and 'HORIZONTAL_MOVE_Z' in params and 'MESH_MIN' in params and 'MESH_MAX' in params and 'PROBE_COUNT' in params and 'ALGORITHM' in params %}
    _BED_MESH_CALIBRATE METHOD={params.METHOD} HORIZONTAL_MOVE_Z={params.HORIZONTAL_MOVE_Z} MESH_MIN={params.MESH_MIN} MESH_MAX={params.MESH_MAX} PROBE_COUNT={params.PROBE_COUNT} ALGORITHM={params.ALGORITHM}
  {% elif 'METHOD' in params and 'HORIZONTAL_MOVE_Z' in params and 'MESH_MIN' in params and 'MESH_MAX' in params and 'PROBE_COUNT' in params %}
    _BED_MESH_CALIBRATE METHOD={params.METHOD} HORIZONTAL_MOVE_Z={params.HORIZONTAL_MOVE_Z} MESH_MIN={params.MESH_MIN} MESH_MAX={params.MESH_MAX} PROBE_COUNT={params.PROBE_COUNT}
  {% elif 'METHOD' in params and 'HORIZONTAL_MOVE_Z' in params and 'MESH_MIN' in params and 'MESH_MAX' in params %}
    _BED_MESH_CALIBRATE METHOD={params.METHOD} HORIZONTAL_MOVE_Z={params.HORIZONTAL_MOVE_Z} MESH_MIN={params.MESH_MIN} MESH_MAX={params.MESH_MAX}
  {% elif 'METHOD' in params and 'HORIZONTAL_MOVE_Z' in params and 'MESH_MIN' in params %}
    _BED_MESH_CALIBRATE METHOD={params.METHOD} HORIZONTAL_MOVE_Z={params.HORIZONTAL_MOVE_Z} MESH_MIN={params.MESH_MIN}
  {% elif 'METHOD' in params and 'HORIZONTAL_MOVE_Z' in params %}
    _BED_MESH_CALIBRATE METHOD={params.METHOD} HORIZONTAL_MOVE_Z={params.HORIZONTAL_MOVE_Z}
  {% elif 'METHOD' in params %}
    _BED_MESH_CALIBRATE METHOD={params.METHOD}
  {% else %}
    _BED_MESH_CALIBRATE
  {% endif %}
  STATUS_READY
