[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set bed_temp = params.BED|default(60)|float %}
    {% set extruder_temp = params.EXTRUDER|default(210)|float %}

    {% set retraction = 3.5|float %}
    {% set measurement_temp = 150|float %}
    
    BED_MESH_PROFILE LOAD=mesh-{bed_temp|int}   ; load premeasured mesh for bed_temp
    COMPUTE_MESH_PARAMETERS        ; compute adaptive bed mesh

    STATUS_HEATING
    M117 Waiting for bed
    M190 S{bed_temp}               ; Waits for bed

    M117 Waiting for extruder
    M109 S{extruder_temp}          ; And then waits for extruder

    G1 E-{retraction} F1800        ; retract filament to prevent ozzing and thus invalidate Z endstop probing with nozzle

    STATUS_BUSY
    CLEAN_NOZZLE

    STATUS_HEATING
    M117 Waiting for extruder
    M109 S{measurement_temp}       ; And then waits for extruder

    CG28                           ; home all axes
    STATUS_BUSY
    DOCK_PROBE_UNLOCK

    STATUS_BUSY
    ATTACH_PROBE_LOCK              ; attach and lock klicky for the rest of the process
    STATUS_LEVELING
    Z_TILT_ADJUST                  ; perform Z tilt

    STATUS_CALIBRATING_Z
    CALIBRATE_Z                    ; calibrate Z offset using klicky and Z endstop

    STATUS_MESHING
    ADAPTIVE_BED_MESH              ; measure adaptive bed mesh
#    BED_MESH_CALIBRATE             ; measure bed mesh

    STATUS_BUSY
    DOCK_PROBE_UNLOCK              ; detach and unlock klicky

    STATUS_HEATING
    M117 Waiting for extruder
    M109 S{extruder_temp}          ; And then waits for extruder

    G1 E{retraction} F1800         ; extrude filament to get it back where it was

    STATUS_PRINTING
    SET_NOZZLE_LEDS_ON
    ADAPTIVE_LINE_PURGE
#    PRIME_LINE
    M117 Printing...

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                                        ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000                    ; move nozzle to remove stringing
    TOOLHEAD_PARK                                              ; park nozzle at rear
    M107                                                       ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_READY


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    TOOLHEAD_PARK
  {% endif %}
  TURN_OFF_HEATERS
  M106 S0
  CANCEL_PRINT_BASE
  STATUS_READY

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  TOOLHEAD_PARK

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  TOOLHEAD_PARK  macro #####
  {% set extrude = printer['gcode_macro TOOLHEAD_PARK'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z3.0 F3000 ;Move Z Axis up
    # move to prime position 
    G1 Z3.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5.1 Y20 Z0.3 F5000.0 ; Move to start position
    G1 X5.1 Y260.0 Z0.3 F1500.0 E15 ; Draw the first line
    G1 X5.4 Y260.0 Z0.3 F5000.0 ; Move to side a little
    G1 X5.4 Y20 Z0.3 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z3.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X10 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish
